\mainpage Welcome to the Human Supervision of Multi-Robot Systems Graphical User Interface! (HSMRS GUI)

This GUI was created in order to facilitate the interactions between a single human supervisor using a laptop or desktop computer and a team of heterogeneous robots. It has been designed in large part using the Singleton design pattern with the Java programming language.

The entirety of the GUI is contained within the MainFrame entity. The MainFrame is subdivided into four parts: the task view, the situational awareness view, the robot/role view, and the feedback view.

The task view contains the list of tasks, the form for creating a new task, and the form for creating a meta task out of the available tasks. On the task list, new tasks can be added using the New Task button. Tasks can similarly be removed by selecting one or more tasks and using the Remove Task button. Multiple tasks can be selected by holding down the control key while selecting tasks. Other actions can be performed on tasks by right clicking on a specific task. The options include adding and removing owners and deleting the task.

In the New Task View, the user is presented with a list of all tasks recognized by the system. When a specific task is selected, a form is generated below the list which enumerates the parameters and gives the user a place to add values for the parameters. The values can be stored in unix type variables which can be accessed using $var_name syntax.

In the New Task Type View, meta tasks which contain subtasks can be created. The user is given a place to add a name for the new task and can select subtasks from a list. Subtasks can be added using the Add Subtask button. Navigation of the subtasks can be achieved using the side tabs on the view. Within a subtask, the user can enter parameter values or leave them blank. Blank fields will show up on the parameter form in the New Task View when the meta task is to be created.

The Situational Awareness View is where the user can see information about the system that can help them make decisions and understand the environment. Currently, only a camera image view and an interactive map view are implemented. These views can be toggled using radio buttons at the top of the Situational Awareness View.  The camera image view displays images being transmitted from the selected robot. By selecting different robots on the robot list view, different camera views can be displayed. The interactive map view allows the user to track the locations of the robots in their environment. It also allows the user to select one or more grid cells to use as parameters for tasks. The interactive map view variables are mapx, mapy, and map_sel, which store the x-coordinate of the primary selected cell, the y-coordinate of the primary selected cell, and a String-encoded list of all selected cells in the order that they were selected. The primary selected cell is the first cell selected in a series, or the only selected cell if only one cell is selected. These can be accessed using the $ key in the task parameter form (i.e. $mapx).
